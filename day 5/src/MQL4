#property copyright "Copyright 2023, OLX Forex."
#property description "Telegram @olxforexgroup"
#property link      "https://olxforex.com/"
#property version   "1.00"

#define ExtBotName "Baily Break EA" //EA Name
#define  Version "1.00"






 bool Trade_Monday=true;
//input string  Info1="Money Management";
input double  Lots = 0.01;
input bool  Lot_Percent=false;
input double  NumPercent=10;
input int TakeProfit=0;
input int StopLoss=0;
input int TrailingStop=0;
input int BreakEven=0;
input int BreakEvenPips=1;
input int MagicNumber=311220;

datetime Timee;
double point;

int P;

int Lot_Decimal=1;
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
int OnInit()
  {
   if(MarketInfo(Symbol(),MODE_MINLOT)<0.1)Lot_Decimal=2;
   else Lot_Decimal=1;
   if(_Digits==5 || _Digits==3)P=10;
   else P=1;
   if(_Digits<4)
     {
      point=0.01;
     }
   else
     {
      point=0.0001;
     }

  

   return(0);
  }
//+------------------------------------------------------------------+
//| FUNCTION DEFINITIONS    deinitialization function                |
//+------------------------------------------------------------------+
void OnDeinit(const int reason)
  {
   ObjectDelete(0,"Panel_Info_Info1");
  }
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
int TotalOrders(int type)
  {
   int cnt=0;
   for(int i=0;i<OrdersTotal();i++)
     {
      if(OrderSelect(i,SELECT_BY_POS,MODE_TRADES))
        {
         if(OrderSymbol()==Symbol() && MagicNumber==OrderMagicNumber() && (OrderType()==type || type==-1))
           {
            cnt++;
           }
        }
     }
   return(cnt);
  }
//+------------------------------------------------------------------+
//| FUNCTION DEFINITIONS   Start function                            |
//+------------------------------------------------------------------+

void OnTick()
  {


//---------------------------------------------

// Get account information
double accountBalance = AccountBalance();
double accountEquity = AccountEquity();
double accountProfit = AccountProfit();
double accountFreeMargin = AccountFreeMargin();
double accountMarginLevel = AccountMargin();

// Calculate NumPercent of open trades in terms of potential loss percentage
double openTradeLossPercent = 0.0;


double totalOpenLotSize = 0.0;
int totalOpenTrades = OrdersTotal();

for (int i = 0; i < totalOpenTrades; i++)
{
    if (OrderSelect(i, SELECT_BY_POS, MODE_TRADES))
    {
        double tradeLotSize = OrderLots();

        totalOpenLotSize += tradeLotSize;
    }
}

// Create panel and display total open lot size

double openTradesPercent = (accountProfit / accountBalance) * 100.0;


// Create panel and display account details
CreatePanel("Panel_Info_Info1", OBJ_EDIT, "www.olxforex.com", 30, 90, 230, 50, clrDarkCyan, Gold, clrDarkCyan, 11, true, false, 0, ALIGN_CENTER);
CreatePanel("Panel_Info_Info3", OBJ_EDIT, "Account Balance : " + DoubleToString(accountBalance, 2), 30, 140, 230, 50, clrDarkCyan, White, clrDarkCyan, 9, true, false, 0, ALIGN_LEFT);
CreatePanel("Panel_Info_Info4", OBJ_EDIT, "Account Equity : " + DoubleToString(accountEquity, 2), 30, 190, 230, 50, clrDarkCyan, White, clrDarkCyan, 9, true, false, 0, ALIGN_LEFT);




CreatePanel("Panel_Info_Info5_Label", OBJ_EDIT, "Account Profit:", 30, 240, 230, 50, clrDarkCyan, White, clrDarkCyan, 9, true, false, 0, ALIGN_LEFT);
CreatePanel("Panel_Info_Info5_Value", OBJ_EDIT, DoubleToString(accountProfit, 2), 150, 240, 100, 50, clrDarkCyan, White

, clrDarkCyan, 9, true, false, 0, ALIGN_LEFT);
CreatePanel("Panel_Info_Info6", OBJ_EDIT, "Account Free Margin : " + DoubleToString(accountFreeMargin, 2), 30, 290, 230, 50, clrDarkCyan, White, clrDarkCyan, 9, true, false, 0, ALIGN_LEFT);
CreatePanel("Panel_Info_Info7", OBJ_EDIT, "Account Margin Level : " + DoubleToString(accountMarginLevel, 2), 30, 340, 230, 50, clrDarkCyan, White, clrDarkCyan, 9, true, false, 0, ALIGN_LEFT);
CreatePanel("Panel_Info_Info8", OBJ_EDIT, "Open Trade Percent :  " + DoubleToString(openTradesPercent, 2)+"%", 30, 390, 230, 50, clrDarkCyan, White, clrDarkCyan, 9, true, false, 0, ALIGN_LEFT);
CreatePanel("Panel_Info_Info9", OBJ_EDIT, "Total Open Lot Size : " + DoubleToString(totalOpenLotSize, 2), 30, 440, 230, 50, clrDarkCyan, White, clrDarkCyan, 9, true, false, 0, ALIGN_LEFT);

color color_profit;
if (accountProfit >= 0)
    color_profit = Lime;
else
    color_profit = Red;














   if(TrailingStop>0)MoveTrailingStop();
   if(BreakEven>0)MoveBreakEven();

   double NewLot;
   if(Lot_Percent) NewLot=LotManage();
   else NewLot=Lots;
   double SL,TP;

   int ticket;

   double Day_High=iHigh(Symbol(),1440,1);
   double Day_Low=iLow(Symbol(),1440,1);

   if(Timee!=iTime(Symbol(),1440,0))
     {
      CloseOrders(OP_BUYSTOP);
      CloseOrders(OP_SELLSTOP);
     }

   if(TotalOrders(OP_BUYSTOP)==0 && TotalOrders(OP_SELLSTOP)>0)
     {
      CloseOrders(OP_SELLSTOP);
     }
   if(TotalOrders(OP_SELLSTOP)==0 && TotalOrders(OP_BUYSTOP)>0)
     {
      CloseOrders(OP_BUYSTOP);
     }

   if((DayOfWeek()!=1 || Trade_Monday) && Timee!=iTime(Symbol(),1440,0))
     {
      if(StopLoss==0)SL=0;else SL=Day_High-StopLoss*point;
      if(TakeProfit==0){TP=0;}else{TP=Day_High+TakeProfit*point;}
      ticket=OrderSend(Symbol(),OP_BUYSTOP,NewLot,NormalizeDouble(Day_High,Digits),3*P,SL,TP,"EA",MagicNumber,0,Blue);

      if(StopLoss==0)SL=0;else SL=Day_Low+StopLoss*point;
      if(TakeProfit==0){TP=0;}else{TP=Day_Low-TakeProfit*point;}
      ticket=OrderSend(Symbol(),OP_SELLSTOP,NewLot,NormalizeDouble(Day_Low,Digits),3*P,SL,TP,"EA",MagicNumber,0,Red);

      PlaySound("Alert.wav");
      Timee=iTime(Symbol(),1440,0);

     }

  }
//+------------------------------------------------------------------+

void CloseOrders(int type)
  {
   for(int i=OrdersTotal()-1;i>=0;i--)
     {
      bool select=OrderSelect(i,SELECT_BY_POS,MODE_TRADES);
      int ticket=OrderTicket();
      double lots=OrderLots();
      int Otype=OrderType();
      string OrderCom=OrderComment();
      if(OrderMagicNumber()==MagicNumber && OrderSymbol()==Symbol() && OrderType()==type)
        {
         if(Otype==OP_BUY)
           {
            bool close=OrderClose(ticket,lots,NormalizeDouble(Bid,Digits),3*P);

           }
         if(Otype==OP_SELL)
           {
            close=OrderClose(ticket,lots,NormalizeDouble(Ask,Digits),3*P);
           }
         if(Otype>OP_SELL)bool del=OrderDelete(OrderTicket());
        }
     }
  }
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
void MoveTrailingStop()
  {
   for(int cnt=0;cnt<OrdersTotal();cnt++)
     {
      bool select=OrderSelect(cnt,SELECT_BY_POS,MODE_TRADES);
      if(OrderType()<=OP_SELL && OrderSymbol()==Symbol() && OrderMagicNumber()==MagicNumber)
        {
         if(OrderType()==OP_BUY)
           {
            if(TrailingStop>0 && NormalizeDouble(Ask,Digits)>NormalizeDouble(OrderOpenPrice()+TrailingStop*point,Digits))
              {
               if((NormalizeDouble(OrderStopLoss(),Digits)<NormalizeDouble(Bid-TrailingStop*point,Digits)) || (OrderStopLoss()==0))
                 {
                  bool modify=OrderModify(OrderTicket(),OrderOpenPrice(),NormalizeDouble(Bid-TrailingStop*point,Digits),OrderTakeProfit(),0,Blue);
                 }
              }
           }
         else
           {
            if(TrailingStop>0 && NormalizeDouble(Bid,Digits)<NormalizeDouble(OrderOpenPrice()-TrailingStop*point,Digits))
              {
               if((NormalizeDouble(OrderStopLoss(),Digits)>(NormalizeDouble(Ask+TrailingStop*point,Digits))) || (OrderStopLoss()==0))
                 {
                  modify=OrderModify(OrderTicket(),OrderOpenPrice(),NormalizeDouble(Ask+TrailingStop*point,Digits),OrderTakeProfit(),0,Red);
                 }
              }
           }
        }
     }
  }
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
void MoveBreakEven()
  {
   for(int cnt=0;cnt<OrdersTotal();cnt++)
     {
      bool select=OrderSelect(cnt,SELECT_BY_POS,MODE_TRADES);
      if(OrderType()<=OP_SELL && OrderSymbol()==Symbol() && OrderMagicNumber()==MagicNumber)
        {
         if(OrderType()==OP_BUY)
           {
            if(TrailingStop>0 && NormalizeDouble(Ask,Digits)>NormalizeDouble(OrderOpenPrice()+TrailingStop*point,Digits))
              {
               if((NormalizeDouble(OrderStopLoss(),Digits)<NormalizeDouble(Bid-TrailingStop*point,Digits)) || (OrderStopLoss()==0))
                 {
                  bool modify=OrderModify(OrderTicket(),OrderOpenPrice(),NormalizeDouble(Bid-TrailingStop*point,Digits),OrderTakeProfit(),0,Blue);
                 }
              }
           }
         else
           {
            if(TrailingStop>0 && NormalizeDouble(Bid,Digits)<NormalizeDouble(OrderOpenPrice()-TrailingStop*point,Digits))
              {
               if((NormalizeDouble(OrderStopLoss(),Digits)>(NormalizeDouble(Ask+TrailingStop*point,Digits))) || (OrderStopLoss()==0))
                 {
                  modify=OrderModify(OrderTicket(),OrderOpenPrice(),NormalizeDouble(Ask+TrailingStop*point,Digits),OrderTakeProfit(),0,Red);
                 }
              }
           }
        }
     }
  }
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
double LotManage()
  {
   double lot=MathCeil(AccountFreeMargin() *NumPercent/1000)/100;
   if(lot<MarketInfo(Symbol(),MODE_MINLOT))lot=MarketInfo(Symbol(),MODE_MINLOT);
   if(lot>MarketInfo(Symbol(),MODE_MAXLOT))lot=MarketInfo(Symbol(),MODE_MAXLOT);
   return (NormalizeDouble(lot,Lot_Decimal));
  }
//+------------------------------------------------------------------+

//+---------------------------------------------------------------------------------+
//+------------------------------------------------------------------+



void CreatePanel(string name,ENUM_OBJECT Type,string text,int XDistance,int YDistance,int Width,int Hight,
                 color BGColor_,color InfoColor,color boarderColor,int fontsize,bool readonly=false,bool Obj_Selectable=false,int Corner=0,ENUM_ALIGN_MODE Align=ALIGN_LEFT)
  {

   if(ObjectFind(0,name)==-1)
     {
      ObjectCreate(0,name,Type,0,0,0);
      ObjectSetInteger(0,name,OBJPROP_XDISTANCE,XDistance);
      ObjectSetInteger(0,name,OBJPROP_YDISTANCE,YDistance);
      ObjectSetInteger(0,name,OBJPROP_XSIZE,Width);
      ObjectSetInteger(0,name,OBJPROP_YSIZE,Hight);
       ObjectSetInteger(0,name,OBJPROP_YSIZE,Hight);      
      ObjectSetString(0,name,OBJPROP_TEXT,text);
      ObjectSetString(0,name,OBJPROP_FONT,"Arial Bold");
      ObjectSetInteger(0,name,OBJPROP_FONTSIZE,fontsize);
      ObjectSetInteger(0,name,OBJPROP_CORNER,Corner);
      ObjectSetInteger(0,name,OBJPROP_COLOR,InfoColor);
      ObjectSetInteger(0,name,OBJPROP_BORDER_TYPE,BORDER_FLAT);
      ObjectSetInteger(0,name,OBJPROP_BORDER_COLOR,boarderColor);
      ObjectSetInteger(0,name,OBJPROP_BGCOLOR,BGColor_);
      ObjectSetInteger(0,name,OBJPROP_SELECTABLE,Obj_Selectable);

      if(Type==OBJ_EDIT)
        {
         ObjectSetInteger(0,name,OBJPROP_ALIGN,Align);
         ObjectSetInteger(0,name,OBJPROP_READONLY,readonly);
        }
     }
   if(ObjectDescription(name)!=text && readonly==true)
     {
      ObjectSetString(0,name,OBJPROP_TEXT,text);
     }
  }

//+---------------------------------------------------------------------------------+
double profit()
{

  double pr_2 = 0;
  for (int p = 0; p < OrdersTotal(); p++)
  {
    if (OrderSelect(p, SELECT_BY_POS, MODE_TRADES))
      if (OrderSymbol() == Symbol())
      {
        pr_2 = pr_2 + OrderProfit();
      }
  }
  return (pr_2);
}

void draw(string a_name_0, double a_corner_8, int a_y_16, int a_x_20, string a_text_24, int a_fontsize_32, string a_fontname_36, color a_color_44)
{
  ObjectCreate(a_name_0, OBJ_LABEL, 0, 0, 0);
  ObjectSetText(a_name_0, a_text_24, a_fontsize_32, a_fontname_36, a_color_44);
  ObjectSet(a_name_0, OBJPROP_CORNER, a_corner_8);
  ObjectSet(a_name_0, OBJPROP_XDISTANCE, a_x_20);
  ObjectSet(a_name_0, OBJPROP_YDISTANCE, a_y_16);
}
